<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    
    <listener>
        <description>bootstrap littleware in "asset-server" mode into application scope</description>
        <listener-class>littleware.web.servlet.AssetServerBootListener</listener-class>
    </listener>

    <servlet>
        <!-- Littleware dispatch servlet ties into littleware IOC injection mechanism -->
        <servlet-name>Dispatch Servlet</servlet-name>
        <servlet-class>littleware.web.servlet.LittleDispatcher</servlet-class>
         <init-param>
             <!-- deprecated mapping - use /auth instead (below) -->
            <param-name>login</param-name>
            <param-value>littleware.web.servlet.login.LoginServlet</param-value>
        </init-param>
         <init-param>
            <param-name>auth</param-name>
            <param-value>littleware.web.servlet.login.LoginServlet</param-value>
        </init-param>
         <init-param>
            <param-name>repo</param-name>
            <param-value>littleware.web.servlet.asset.AssetMgrServlet</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
        
    <!-- littleId servlets ... -->
    <servlet>
        <servlet-name>AuthReq Servlet</servlet-name>
        <servlet-class>littleware.apps.littleId.server.web.servlet.AuthReqServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>ProviderResp Servlet</servlet-name>
        <servlet-class>littleware.apps.littleId.server.web.servlet.ProviderRespServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
            
    <servlet-mapping>
        <!-- deprecated mapping - prefer /dispatch/* below -->
        <servlet-name>Dispatch Servlet</servlet-name>
        <url-pattern>/auth/*</url-pattern>
        <url-pattern>/dispatch/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>AuthReq Servlet</servlet-name>
        <url-pattern>/openId/services/authRequest/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>ProviderResp Servlet</servlet-name>
        <url-pattern>/openId/services/providerResponse/*</url-pattern>
    </servlet-mapping>
        
    <!--
    
    <servlet-mapping>
        <servlet-name>Login Servlet</servlet-name>
        <url-pattern>/login/services/login/*</url-pattern>
    </servlet-mapping>
    
    -->
     
    <filter>
        <filter-name>AuthFilter</filter-name>
        <filter-class>littleware.web.servlet.login.LoginFilter</filter-class>
        <init-param>
            <param-name>authRequired</param-name>
            <param-value>true</param-value>
        </init-param>        
    </filter>
    <filter>
        <filter-name>AuthOptionalFilter</filter-name>
        <filter-class>littleware.web.servlet.login.LoginFilter</filter-class>
        <init-param>
            <param-name>authRequired</param-name>
            <param-value>false</param-value>
        </init-param>        
    </filter>

    <!-- EBay CORS filter: https://github.com/eBay/cors-filter -->
   <filter>
    <filter-name>CORS Filter</filter-name>
    <filter-class>org.ebaysf.web.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.origins</param-name>
            <param-value>http://apps.frickjack.com,http://apps.frickjack.com.s3-website-us-east-1.amazonaws.com,http://localhost:8080</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
        </init-param>            
  </filter>
    <!--
    <filter>
        <filter-name>SecureFilter</filter-name>
        <filter-class>littleware.apps.littleId.client.web.servlet.SecurityFilter</filter-class>
        <init-param>
            <param-name>loginForm</param-name>
            <param-value>/login/view/en/loginForm.jsp</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>AccessFilter</filter-name>
        <filter-class>com.bullingdon.asset.web.servlet.AccessFilter</filter-class>
        <init-param>
            <param-name>accessDeniedPath</param-name>
            <param-value>/login/view/en/accessDenied.jsp</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>GzipFilter</filter-name>
        <filter-class>org.mortbay.servlet.GzipFilter</filter-class>
        <! ...
        <filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>
        
        <init-param>
            <param-name>mimeTypes</param-name>
            <param-value>text/html,text/plain,text/xml,application/xhtml+xml,text/css,application/javascript,image/svg+xml</param-value>
        </init-param>
        ...>
    </filter>

    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> 
    
    <filter-mapping>
        <filter-name>SecureFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>AccessFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
        -->
    <filter-mapping>
        <filter-name>AuthFilter</filter-name>
        <url-pattern>/authTest/*</url-pattern>
        <url-pattern>/dispatch/repo/*</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
        <!-- don't require a user trying to authenticate to already be authenticated - duh! -->
        <filter-name>AuthOptionalFilter</filter-name>
        <url-pattern>/auth/*</url-pattern>
        <url-pattern>/dispatch/auth/*</url-pattern>
    </filter-mapping>
  <filter-mapping>
    <filter-name>CORS Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>    
        
        <!-- ugh - trying to figure out why glassfish refuses "PUT" requests with 403 ?
   <security-constraint>
        <display-name>RestConstraint</display-name>
        <web-resource-collection>
            <web-resource-name>rest</web-resource-name>
            <description/>
            <url-pattern>/dispatch/*</url-pattern>
            <http-method>OPTIONS</http-method>
            <http-method>TRACE</http-method>
        </web-resource-collection>
   </security-constraint>
        -->
        
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    
    <context-param>
        <param-name>javax.faces.DISABLE_FACELET_JSF_VIEWHANDLER</param-name>
        <param-value>true</param-value>
    </context-param>
    <mime-mapping>
        <extension>svg</extension>
        <mime-type>image/svg+xml</mime-type>
    </mime-mapping>    
    <mime-mapping>
        <extension>manifest</extension>
        <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>    
 
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>
