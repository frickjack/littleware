<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project
     xmlns:ivy="antlib:org.apache.ivy.ant"
     name="ivy-template"
     >
    <description>Some build rules with IVY.</description>

<property name="ivy.install.version" value="2.2.0" /> 
<dirname property="ivy.jar.dir" file="${ant.file.ivy-template}" /> 
<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" /> 


<target name="-post-clean">
    <delete dir="${basedir}/ivy" verbose="true" />
</target>

    <target name="download-ivy" unless="skip.download"> 
    	<mkdir dir="${ivy.jar.dir}"/> 
		<!-- download Ivy from web site so that it can be used even without any special installation --> 
		<echo message="installing ivy..."/> 
    	<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
    		 dest="${ivy.jar.file}" usetimestamp="true"/> 
    </target> 
    
    <!-- ================================= 
          target: install-ivy         
            this target is not necessary if you put ivy.jar in your ant lib directory
            if you already have ivy in your ant lib, you can simply remove this
            target and the dependency the 'go' target has on it
         ================================= --> 
    <target name="install-ivy" depends="download-ivy" description="--> install ivy"> 
    	<!-- try to load ivy here from local ivy dir, in case the user has not already dropped
    	      it into ant's lib dir (note that the latter copy will always take precedence).
    	      We will not fail as long as local lib dir exists (it may be empty) and
    	      ivy is in at least one of ant's lib dir or the local lib dir. --> 
    	<path id="ivy.lib.path"> 
    	    <fileset dir="${ivy.jar.dir}" includes="*.jar"/> 
    	</path> 
    	<taskdef resource="org/apache/ivy/ant/antlib.xml"
    	          uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    	          <!--
    	          <ivy:settings file="${user.home}/Documents/Code/repository/littlesettings.xml" />
    	<ivy:settings url="http://ivy2maven2.littleware.googlecode.com/hg/littlesettings.xml" />
    	-->
    	<ivy:settings url="http://ivy2maven2.littleware.googlecode.com/hg/littlesettings.xml" />
    </target>    

<target name="resolve" depends="install-ivy" description="-- retrieve dependencies with ivy">
    <!--
    We assume here that there are 'compile' and 'test' ivy configs.
    Delete dist/ivy.xml to force rebuild
    -->
    <delete file="dist/ivy.xml" />
        <ivy:retrieve conf="compile" pattern="ivy/compile/[artifact]-[revision]-[type].[ext]"
            overwriteMode="newer"
            />
        <pathconvert property="ivy.compile.classpath.computed" dirsep="/" pathsep=":">
            <path>
                <fileset dir="ivy/compile" includes="*.jar"/>
            </path>
            <map from="${basedir}${file.separator}" to=""/>
        </pathconvert>
        <propertyfile file="nbproject/project.properties">
            <entry operation="=" key="ivy.compile.classpath" value="${ivy.compile.classpath.computed}"/>
        </propertyfile>
        
        <mkdir dir="ivy/test" />
        <ivy:retrieve conf="test" pattern="ivy/test/[artifact]-[revision]-[type].[ext]"
               overwriteMode="newer"
                />
        <pathconvert property="ivy.test.classpath.computed" dirsep="/" pathsep=":">
            <path>
                <fileset dir="ivy/test" includes="*.jar"/>
            </path>
            <map from="${basedir}${file.separator}" to=""/>
        </pathconvert>
        <propertyfile file="nbproject/project.properties">
            <entry operation="=" key="ivy.test.classpath" value="${ivy.test.classpath.computed}"/>
        </propertyfile>        
        
        <ivy:resolve />        
    </target>

<target name="-pre-init" depends="resolve" />

<target name="cli-check">
    <available file="cli" property="cli.exists"/>
</target>

<target name="-post-jar"
        depends="-init-project,cli-check"
        if="cli.exists"
         >
         <!--
         Copy scripts in cli/ directory to dist dir
         -->
    <fail unless="dist.dir">dist.dir not defined ? </fail>
    <copy todir="${dist.dir}">
        <fileset dir="cli">
            <include name="*.sh" />
            <include name="*.bat" />
            <include name="*.properties" />
        </fileset>
    </copy>
  </target>

<target name="publish" depends="resolve,-init-project,jar" description="publish to local ivy repository">
	<ivy:publish  overwrite="true"
			           resolver="local"
			           pubrevision="${ivy.publish.version}" 
			           >
             <artifacts pattern="${dist.dir}/[artifact].[ext]" />
         </ivy:publish>
         <delete dir="${ivy.cache.dir}/littleware" />
    </target>

    
</project>
